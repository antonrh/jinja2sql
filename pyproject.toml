[project]
name = "jinja2sql"
version = "0.8.0"
description = "Jinja Templates to SQL"
authors = [{ name = "Anton Ruhlov", email = "antonruhlov@gmail.com" }]
requires-python = "~=3.9"
readme = "README.md"
license = "MIT"
keywords = [
    "sql",
    "query",
    "queries",
    "template",
    "jinja",
    "database",
    "db",
]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "jinja2>=3.1.2,<4",
    "typing-extensions>=4.12.2,<5",
]

[project.urls]
Repository = "https://github.com/antonrh/jinja2sql"

[dependency-groups]
dev = [
    "mypy[faster-cache]>=1.14.1,<2",
    "ruff>=0.9.1",
    "pytest>=8.3.3,<9",
    "pytest-cov>=5.0.0,<6",
    "pytest-docker>=3.1.1,<4",
    "pytest-asyncio>=0.24.0,<0.25",
    "sqlalchemy>=2.0.30,<3",
    "psycopg>=3.2.3,<4",
]
docs = [
    "mkdocs>=1.6.0,<2",
    "mkdocs-material>=9.5.25,<10",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = ["A", "B", "C", "E", "F", "I", "W", "TID252", "T20", "UP"]
ignore = ["A003", "B008", "B009", "B010", "D104", "D107"]

[tool.ruff.lint.isort]
combine-as-imports = true
forced-separate = ["tests", "app"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.9"
strict = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
    "--strict-config",
    "--strict-markers",
]
xfail_strict = true
junit_family = "xunit2"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.report]
exclude_also = [
    "pragma: no cover",
    "@abstractmethod",
    "@abc.abstractmethod",
    "if TYPE_CHECKING",
    "if t.TYPE_CHECKING",
    "@t.overload",
    "raise NotImplementedError",
    "except ImportError:",
]
