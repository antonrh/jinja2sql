[tool.poetry]
name = "jinja2sql"
version = "0.4.0"
description = "Jinja Templates to SQL"
authors = ["Anton Ruhlov <antonruhlov@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/antonrh/jinja2sql"
keywords = ["sql", "query", "queries", "template", "jinja", "database", "db"]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
]
packages = [
    { include = "jinja2sql", from = "." },
]

[tool.poetry.dependencies]
python = "^3.8"
typing-extensions = "^4.8.0"
mkdocs = { version = "^1.4.2", optional = true }
mkdocs-material = { version = "^9.1.13", optional = true }
jinja2 = "^3.1.2"
sqlalchemy = "^2.0.23"

[tool.poetry.extras]
docs = ["mkdocs", "mkdocs-material"]

[tool.poetry.group.dev.dependencies]
mypy = "^1.10.0"
ruff = "^0.4.7"
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.23.6"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["A", "B", "C", "E", "F", "I", "W", "TID252", "T20", "UP"]
ignore = ["A003", "B008", "B009", "B010", "D104", "D107"]

[tool.ruff.lint.isort]
combine-as-imports = true
forced-separate = ["tests", "app"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.10"
strict = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
    "--strict-config",
    "--strict-markers",
]
xfail_strict = true
junit_family = "xunit2"

[tool.coverage.report]
exclude_also = [
    "pragma: no cover",
    "@abstractmethod",
    "@abc.abstractmethod",
    "if TYPE_CHECKING",
    "if t.TYPE_CHECKING",
    "@t.overload",
    "raise NotImplementedError",
    "except ImportError:",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
